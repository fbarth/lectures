%!PS-Adobe-2.0 EPSF-2.0
%%Title: cenarioAtuacao_v2_comSim.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Fri Aug  1 17:44:40 2008
%%For: fabricio@zeus (Fabr√≠cio J. Barth,,,)
%%BoundingBox: 0 0 777 454
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Bold /Times-Bold-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 454 moveto 0 0 lineto 777 0 lineto 777 454 lineto closepath clip newpath
-46.8 542.8 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 60
% Polyline
0 slj
0 slc
15.000 slw
 [60] 0 sd
n 8460 1710 m 10980 1710 l 10980 5760 l 8460 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 564.00 114.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 55
% Polyline
0 slj
0 slc
30.000 slw
 [15] 0 sd
n 9045 1890 m 10440 1890 l 10440 4050 l 9045 4050 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 603.00 126.00] PATmp PATsp ef gr PATusp gs col-1 s gr  [] 0 sd
% Polyline
15.000 slw
 [60] 0 sd
n 9045 6075 m 10440 6075 l 10440 8235 l 9045 8235 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 603.00 405.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 6840 3330 162 162 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
0 slc
n 990 2592 m
 3910 2592 l gs col0 s gr 
% Polyline
n 1065 2250 m 990 2250 990 3345 75 arcto 4 {pop} repeat
  990 3420 3835 3420 75 arcto 4 {pop} repeat
  3910 3420 3910 2325 75 arcto 4 {pop} repeat
  3910 2250 1065 2250 75 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Ellipse
n 5625 2925 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5670 4995 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5689 7521 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3150 5220 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1665 7110 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
n 11880 2520 m 12150 2520 l 12150 2745 l 11880 2745 l
 cp gs col0 s gr 
% Polyline
n 11880 2205 m 12150 2205 l 12150 2430 l 11880 2430 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 792.00 147.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11880 1890 m 12150 1890 l 12150 2115 l 11880 2115 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 792.00 126.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Ellipse
n 4545 3645 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4590 2160 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6705 2025 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3330 6435 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1800 4950 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 6030 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6930 6930 191 191 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4500 8145 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6439 6076 225 225 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6996 4754 191 191 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9739 7656 450 450 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9720 2475 450 450 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9720 4995 450 450 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9720 6615 450 450 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9720 3465 450 450 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
gs  clippath
5056 2494 m 5286 2667 l 5358 2571 l 5128 2398 l 5128 2398 l 5284 2590 l 5056 2494 l cp
eoclip
n 4770 2205 m
 5310 2610 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5056 2494 m 5284 2590 l 5128 2398 l  col0 s
% Polyline
7.500 slw
gs  clippath
6146 2581 m 5973 2811 l 6069 2883 l 6242 2653 l 6242 2653 l 6050 2809 l 6146 2581 l cp
eoclip
n 6570 2115 m
 6030 2835 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6146 2581 m 6050 2809 l 6242 2653 l  col0 s
% Polyline
7.500 slw
gs  clippath
5119 3399 m 5356 3235 l 5288 3137 l 5051 3301 l 5051 3301 l 5283 3214 l 5119 3399 l cp
eoclip
n 4725 3600 m
 5310 3195 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5119 3399 m 5283 3214 l 5051 3301 l  col0 s
% Polyline
7.500 slw
gs  clippath
2562 5010 m 2850 5010 l 2850 4890 l 2562 4890 l 2562 4890 l 2802 4950 l 2562 5010 l cp
eoclip
n 2025 4950 m
 2835 4950 l gs col0 s gr gr

% arrowhead
15.000 slw
n 2562 5010 m 2802 4950 l 2562 4890 l  col0 s
% Polyline
7.500 slw
gs  clippath
2713 5762 m 2966 5625 l 2909 5520 l 2656 5656 l 2656 5656 l 2896 5596 l 2713 5762 l cp
eoclip
n 2340 5895 m
 2925 5580 l gs col0 s gr gr

% arrowhead
15.000 slw
n 2713 5762 m 2896 5596 l 2656 5656 l  col0 s
% Polyline
7.500 slw
gs  clippath
3345 5943 m 3345 5655 l 3225 5655 l 3225 5943 l 3225 5943 l 3285 5703 l 3345 5943 l cp
eoclip
n 3285 6255 m
 3285 5670 l gs col0 s gr gr

% arrowhead
15.000 slw
n 3345 5943 m 3285 5703 l 3225 5943 l  col0 s
% Polyline
7.500 slw
gs  clippath
3689 4865 m 3540 5111 l 3643 5173 l 3791 4927 l 3791 4927 l 3617 5102 l 3689 4865 l cp
eoclip
n 4410 3780 m
 3600 5130 l gs col0 s gr gr

% arrowhead
15.000 slw
n 3689 4865 m 3617 5102 l 3791 4927 l  col0 s
% Polyline
7.500 slw
gs  clippath
5112 5463 m 5355 5307 l 5290 5206 l 5047 5362 l 5047 5362 l 5282 5283 l 5112 5463 l cp
eoclip
n 3555 6390 m
 5310 5265 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5112 5463 m 5282 5283 l 5047 5362 l  col0 s
% Polyline
7.500 slw
gs  clippath
1592 6381 m 1558 6667 l 1677 6681 l 1711 6395 l 1711 6395 l 1624 6627 l 1592 6381 l cp
eoclip
n 1800 5130 m
 1620 6660 l gs col0 s gr gr

% arrowhead
15.000 slw
n 1592 6381 m 1624 6627 l 1711 6395 l  col0 s
% Polyline
7.500 slw
gs  clippath
1885 6393 m 1740 6642 l 1844 6703 l 1989 6453 l 1989 6453 l 1817 6631 l 1885 6393 l cp
eoclip
n 2071 6192 m
 1800 6660 l gs col0 s gr gr

% arrowhead
15.000 slw
n 1885 6393 m 1817 6631 l 1989 6453 l  col0 s
% Polyline
7.500 slw
gs  clippath
6346 7127 m 6082 7240 l 6129 7351 l 6394 7237 l 6394 7237 l 6150 7277 l 6346 7127 l cp
eoclip
n 6750 7020 m
 6120 7290 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6346 7127 m 6150 7277 l 6394 7237 l  col0 s
% Polyline
7.500 slw
gs  clippath
5039 7868 m 5276 7704 l 5208 7606 l 4971 7770 l 4971 7770 l 5203 7683 l 5039 7868 l cp
eoclip
n 4645 8069 m
 5230 7664 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5039 7868 m 5203 7683 l 4971 7770 l  col0 s
% Polyline
7.500 slw
gs  clippath
6264 3158 m 5985 3088 l 5955 3204 l 6235 3274 l 6235 3274 l 6017 3158 l 6264 3158 l cp
eoclip
n 6705 3330 m
 5985 3150 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6264 3158 m 6017 3158 l 6235 3274 l  col0 s
% Polyline
7.500 slw
gs  clippath
6062 5582 m 5889 5352 l 5793 5424 l 5966 5654 l 5966 5654 l 5870 5426 l 6062 5582 l cp
eoclip
n 6255 5940 m
 5850 5400 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6062 5582 m 5870 5426 l 5966 5654 l  col0 s
% Polyline
7.500 slw
gs  clippath
6359 4852 m 6086 4942 l 6124 5056 l 6397 4966 l 6397 4966 l 6151 4985 l 6359 4852 l cp
eoclip
n 6795 4770 m
 6120 4995 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6359 4852 m 6151 4985 l 6397 4966 l  col0 s
% Polyline
 [60] 0 sd
n 8280 1575 m 11160 1575 l 11160 8460 l 8280 8460 l
 cp gs col0 s gr  [] 0 sd
% Polyline
n 7755 1440 m 7650 1440 7650 8490 105 arcto 4 {pop} repeat
  7650 8595 12945 8595 105 arcto 4 {pop} repeat
  13050 8595 13050 1545 105 arcto 4 {pop} repeat
  13050 1440 7755 1440 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 870 1440 m 765 1440 765 8490 105 arcto 4 {pop} repeat
  765 8595 7365 8595 105 arcto 4 {pop} repeat
  7470 8595 7470 1545 105 arcto 4 {pop} repeat
  7470 1440 870 1440 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman-iso ff 222.25 scf sf
6750 3420 m
gs 1 -1 sc (u3) col0 sh gr
/Times-Bold-iso ff 190.50 scf sf
1113 2516 m
gs 1 -1 sc (Legenda:) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
1080 3195 m
gs 1 -1 sc (dI = documento i) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
1125 2880 m
gs 1 -1 sc (uI = usu\341rio i) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
5490 2970 m
gs 1 -1 sc (d1) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
5535 5040 m
gs 1 -1 sc (d5) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
5580 7605 m
gs 1 -1 sc (d4) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
3015 5265 m
gs 1 -1 sc (d2) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
1575 7155 m
gs 1 -1 sc (d3) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
12285 2700 m
gs 1 -1 sc (baixa) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
12285 2385 m
gs 1 -1 sc (m\351dia) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
12285 2070 m
gs 1 -1 sc (alta) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
11610 1755 m
gs 1 -1 sc (Similaridade:) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
6615 2070 m
gs 1 -1 sc (u1) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
4500 2205 m
gs 1 -1 sc (u2) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
4455 3735 m
gs 1 -1 sc (u4) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
3240 6525 m
gs 1 -1 sc (u7) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
2025 6075 m
gs 1 -1 sc (u6) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
1710 5040 m
gs 1 -1 sc (u5) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
6795 7020 m
gs 1 -1 sc (u8) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
4410 8235 m
gs 1 -1 sc (u9) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
6840 4815 m
gs 1 -1 sc (u10) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
6300 6165 m
gs 1 -1 sc (u11) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
990 1800 m
gs 1 -1 sc (\(a\)) col0 sh gr
/Times-Roman-iso ff 190.50 scf sf
7830 1800 m
gs 1 -1 sc (\(b\)) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
9585 2520 m
gs 1 -1 sc (d2) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
9630 3510 m
gs 1 -1 sc (d3) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
9585 5040 m
gs 1 -1 sc (d1) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
9585 6660 m
gs 1 -1 sc (d5) col0 sh gr
/Times-Roman-iso ff 222.25 scf sf
9630 7740 m
gs 1 -1 sc (d4) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
